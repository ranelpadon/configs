# https://www.man7.org/linux/man-pages/man1/tmux.1.html

# To exit a named session (the colon is the tmux prompt at the topbar):
# <C-t> :kill-session

# prefixc create window
# prefixn next window
# prefix, rename window
# prefix& close window

# Set vi as the default editor
# set -g status-keys vi
# Vi copypaste mode
# Check the vi mode keys:
# <C-t> :list-keys -T copy-mode-vi
set-window-option -g mode-keys vi

# Override the color inversion logic of selection/cursor color
# for better UX.
# https://github.com/alacritty/alacritty/issues/4576#issuecomment-1109390005
set -g mode-style 'bg=#d19a66,fg=#52565c,noreverse'

# Default vi mode key: <C-t>[
unbind [
bind -n C-v copy-mode

# Enable mouse support(e.g. scroll, selection, etc).
set-option -g mouse on

unbind -T copy-mode-vi MouseDragEnd1Pane
# Let `alacritty` do the copy-on-select.
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-no-clear

bind -T copy-mode-vi n send -X cursor-left
bind -T copy-mode-vi e send -X cursor-down
bind -T copy-mode-vi u send -X cursor-up
bind -T copy-mode-vi i send -X cursor-right

bind -T copy-mode-vi m send -X search-forward
bind -T copy-mode-vi M send -X search-reverse


bind -T copy-mode-vi C-u send -X halfpage-up
bind -T copy-mode-vi C-e send -X halfpage-down

bind -T copy-mode-vi v send -X begin-selection
# bind -T copy-mode-vi y send -X copy-pipe-and-cancel
bind -T copy-mode-vi y send -X copy-selection-no-clear

unbind -T copy-mode-vi l
bind -T copy-mode-vi l send -X next-space-end
# No need to select.
# bind -T copy-mode-vi Y send -X copy-end-of-line
bind -T copy-mode-vi Y send -X begin-selection \; send -X end-of-line \; send -X copy-selection-no-clear

# Quit (`q`), same  key when exiting after copy-on-drag mode.
bind -T copy-mode-vi q send -X cancel

# Setting the prefix from C-b to C-a
set -g prefix C-t

# Free the original Ctrl-b prefix keybinding
unbind C-b

# customs keys
# https://tao-of-tmux.readthedocs.io/en/latest/manuscript/10-scripting.html#controlling-tmux-send-keys
bind t new-window -c "#{pane_current_path}" -a -n "$PWD"

bind w kill-window
bind k kill-session
# kill all sessions
bind q kill-server

# allow for navigating between words with option
set-window-option -g xterm-keys on
# https://unix.stackexchange.com/questions/625090/binding-key-in-tmux-without-prefix-key
# keys without prefix (-n)
bind -n C-n previous-window
# could not use `C-i` here just like in browser/VS Code
# since `C-i` and `Tab` are equivalent in Terminal (same with `C-m` and `Enter` keys)
# which means could not use `Tab` anymore for indentation and auto-completion.
# Collides with the rare `send-to-backgound` command.
bind -n C-z next-window

bind n swap-window -t -1
bind i swap-window -t +1

# setting the delay between prefix and command
set -s escape-time 0

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Sync with system clipboard.
set -g set-clipboard on

# Scrollback buffer
set -g history-limit 50000

# Comment out for M1 compatibility.
# set -g default-shell /usr/local/bin/zsh

# TERM inside tmux, so should match screen* or tmux*.
# https://unix.stackexchange.com/questions/568260/how-is-default-terminal-compared-to-tmux-terminal-overrides#568263
set -g default-terminal 'screen-256color'

# TERM outside tmux and allows you to modify the capabilities tmux uses when it talks to the terminal it is running it.
# set -ga terminal-overrides ',xterm-*:Tc'

# Retain the terminal cursor when in Tmux mode.
# Since the block cursor has color inversion issue when doing selection.
# https://www.man7.org/linux/man-pages/man1/tmux.1.html#TERMINFO_EXTENSIONS
# Reference: https://github.com/tmux/tmux/issues/1557#issuecomment-536657320
# `Tc` for `true color`.
# set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[2 q'
set -ga terminal-overrides ',xterm-*:Tc,*:Ss=\E[%p1%d q:Se=\E[2 q'
# set -ga terminal-overrides ',*256color*:smcup@:rmcup@'

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Update files on focus (for Vim)
set-option -g focus-events on

# Status update interval
set -g status-interval 1
set-option -g status-position top

# Reduce time to wait for Escape key. You'll want this for neovim.
set-option escape-time 0

######### DISPLAY ##########
set -g renumber-windows on    # renumber windows when a window is closed

######### THEME  ##########

# Active window title color
setw -g status-bg black
setw -g window-status-separator '|'
setw -g status-left ' '
setw -g status-right ' '

# https://stackoverflow.com/questions/28376611/how-to-automatically-rename-tmux-windows-to-the-current-directory#37136828
# https://tao-of-tmux.readthedocs.io/en/latest/manuscript/09-status-bar.html#styling
set-window-option -g window-status-current-format ' #[fg=#3e4452]#{pane_current_command} #[fg=green]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-1 | rev) '
set-window-option -g window-status-format ' #[fg=#3e4452]#{pane_current_command} #[fg=#5c6370]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-1 | rev) '

# Allow us to reload our Tmux configuration while
# using Tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"
