# https://www.man7.org/linux/man-pages/man1/tmux.1.html

# prefixc create window
# prefixn next window
# prefix, rename window
# prefix& close window

# Set vi as the default editor
# set -g status-keys vi
# Vi copypaste mode
# set-window-option -g mode-keys vi

unbind -n -Tcopy-mode-vi MouseDragEnd1Pane
bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-selection-no-clear

# Setting the prefix from C-b to C-a
set -g prefix C-t

# Free the original Ctrl-b prefix keybinding
unbind C-b

# customs keys
# https://tao-of-tmux.readthedocs.io/en/latest/manuscript/10-scripting.html#controlling-tmux-send-keys
bind t new-window -c "#{pane_current_path}" -a -n "$PWD"

bind w kill-window
# kill all windows
bind q kill-server

# allow for navigating between words with option
set-window-option -g xterm-keys on
# https://unix.stackexchange.com/questions/625090/binding-key-in-tmux-without-prefix-key
# keys without prefix (-n)
bind -n C-n previous-window
# could not use `C-i` here just like in browser/VS Code
# since `C-i` and `Tab` are equivalent which means
# could not use `Tab` anymore for auto-completion and indentation.
bind -n C-k next-window

bind n swap-window -t -1
bind i swap-window -t +1

# setting the delay between prefix and command
set -s escape-time 0

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Scroll up with mouse
set-option -g mouse on
set -g set-clipboard on

# Scrollback buffer
set -g history-limit 10000

set -g default-shell /usr/local/bin/zsh

# TERM inside tmux, so should match screen* or tmux*.
# https://unix.stackexchange.com/questions/568260/how-is-default-terminal-compared-to-tmux-terminal-overrides#568263
set -g default-terminal 'screen-256color'
# TERM outside tmux and allows you to modify the capabilities tmux uses when it talks to the terminal it is running it.
set -ga terminal-overrides ',xterm-*:Tc'

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Update files on focus (for Vim)
set-option -g focus-events on

# Status update interval
set -g status-interval 1
set-option -g status-position top

# Reduce time to wait for Escape key. You'll want this for neovim.
set-option escape-time 0

######### DISPLAY ##########
set -g renumber-windows on    # renumber windows when a window is closed

######### THEME  ##########

# Active window title color
setw -g window-status-current-style fg=black,bg=magenta
setw -g window-status-separator ' | '
setw -g status-left ' '
setw -g status-right ' '

# https://stackoverflow.com/questions/28376611/how-to-automatically-rename-tmux-windows-to-the-current-directory#37136828
# https://tao-of-tmux.readthedocs.io/en/latest/manuscript/09-status-bar.html#styling
set-window-option -g window-status-current-format '#[bg=magenta] #[fg=#e9e9ea]#{pane_current_command} #[fg=black]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-1 | rev) #[bg=magenta]'
set-window-option -g window-status-format ' #[fg=#e9e9ea]#{pane_current_command} #[fg=black]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-1 | rev) '

# Allow us to reload our Tmux configuration while
# using Tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"
