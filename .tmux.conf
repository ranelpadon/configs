# https://www.man7.org/linux/man-pages/man1/tmux.1.html

# prefixc create window
# prefixn next window
# prefix, rename window
# prefix& close window

# Set vi as the default editor
set -g status-keys vi
# Vi copypaste mode
set-window-option -g mode-keys vi
if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'

# Setting the prefix from C-b to C-a
set -g prefix C-t

# Free the original Ctrl-b prefix keybinding
unbind C-b

# unexpected binding
# unbind Tab

# customs keys
# https://tao-of-tmux.readthedocs.io/en/latest/manuscript/10-scripting.html#controlling-tmux-send-keys
bind t new-window -c "#{pane_current_path}" -a -n "$PWD"


bind w kill-window
# kill all windows
bind q kill-server

# allow for navigating between words with option
set-window-option -g xterm-keys on
# https://unix.stackexchange.com/questions/625090/binding-key-in-tmux-without-prefix-key
# keys without prefix (-n)
# bind -n Space-t new-window
# unbind C-k
bind -n C-n previous-window
bind -n C-e next-window
# set -s user-keys[0] "\e[1;5I"
# set -s user-keys[0] "^[[1;5I"
# set -s user-keys[1] "^[[1;6I"
# bind-key -n User0 previous-window
# bind-key -n User1 next-window
bind k swap-window -t -1
bind i swap-window -t +1


#setting the delay between prefix and command
set -s escape-time 0

# enter tmuxâ€™s Command mode with Prefix : and type this whenever you make a change: source-file ~/.tmux.conf

# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Activity monitoring
# setw -g monitor-activity on
# set -g visual-activity on

# Scroll up with mouse
set-option -g mouse on
set -g set-clipboard on

# Scrollback buffer
set -g history-limit 10000

set -g default-shell /usr/local/bin/zsh

set -g default-terminal "screen-256color"

# tmux display things in 256 colors
#set -g default-terminal "screen-256color"
#set -g default-terminal "screen.xterm-256color"
#set-option -g default-terminal "screen-256color"
#set-option -g terminal-overrides "screen-256color"
#set -g default-terminal "xterm-256color"
#set -g terminal-overrides "xterm-256color"

# Keep colors pretty
#set -g default-terminal 'tmux-256color'
set -ga terminal-overrides ',xterm-*:Tc'

# command delay? We don't want that, make it short
# set -g escape-time 10


# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Set window notifications
# set -g monitor-activity on
# set -g visual-activity on

# Update files on focus (using for vim)
#set -g focus-events on

# Status update interval
set -g status-interval 1
set-option -g status-position top

# Reduce time to wait for Escape key. You'll want this for neovim.
set-option escape-time 0

# Option to clear histroy
# bind -n C-k clear-history
# bind-key -n C-l send-keys 'C-l'
# bind-key R switch-client -r

######### DISPLAY ##########
set -g renumber-windows on    # renumber windows when a window is closed

######### THEME  ##########
#set -g status-bg colour237
#set -g status-fg colour246

#set-option -g pane-active-border-style fg=colour239
#set-option -g pane-border-style fg=colour237
#set -g mode-style fg=colour235,bg=colour66

#set-option -g message-style bg=colour66,fg=colour235

# set-option -g status-justify "left"
# set-option -g status-left-style none
# set-option -g status-left-length "80"
# set-option -g status-right-style none
# set-option -g status-right-length "80"

# set-option -g status-right '#(gitmux -cfg ~/.gitmux.conf "#{pane_current_path}") %H:%M:%S '
# set-window-option -g window-status-separator " "
# set-window-option -g window-status-current-format "#[fg=colour66]#W"
# set-window-option -g window-status-format "#W"

# set the status line's colors
# set -g status-style fg=white,bg=blue
# Set different background color for active window
# set -g window-status-current-bg magenta
# Active window title color
setw -g window-status-current-style fg=black,bg=magenta
setw -g window-status-separator ' | '
setw -g status-left ' '
setw -g status-right ' '

# https://stackoverflow.com/questions/28376611/how-to-automatically-rename-tmux-windows-to-the-current-directory#37136828
set-window-option -g window-status-current-format '#[bg=magenta] #[fg=black]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-1 | rev) #[bg=magenta]'
set-window-option -g window-status-format ' #[fg=black]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-1 | rev) '

# Allow us to reload our Tmux configuration while
# using Tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# if "test ! -d ~/.tmux/plugins/tpm" \
#    "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# set -g @plugin 'casonadams/tmux-vi-navigation'
# set -g @yank_selection 'clipboard'
# set -g @yank_selection_mouse 'clipboard'

# run -b '~/.tmux/plugins/tpm/tpm'
